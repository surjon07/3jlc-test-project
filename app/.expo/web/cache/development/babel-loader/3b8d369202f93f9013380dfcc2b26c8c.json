{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _constants = require(\"./constants\");\n\nvar _IndiscreteGestureHandler = _interopRequireDefault(require(\"./IndiscreteGestureHandler\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RotationGestureHandler = function (_IndiscreteGestureHan) {\n  (0, _inherits2.default)(RotationGestureHandler, _IndiscreteGestureHan);\n\n  var _super = _createSuper(RotationGestureHandler);\n\n  function RotationGestureHandler() {\n    (0, _classCallCheck2.default)(this, RotationGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(RotationGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'rotate';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Rotate;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var _this$initialRotation;\n\n      var rotation = _ref.rotation,\n          velocity = _ref.velocity,\n          center = _ref.center;\n      return {\n        rotation: (rotation - ((_this$initialRotation = this.initialRotation) != null ? _this$initialRotation : 0)) * _constants.DEG_RAD,\n        anchorX: center.x,\n        anchorY: center.y,\n        velocity: velocity\n      };\n    }\n  }]);\n  return RotationGestureHandler;\n}(_IndiscreteGestureHandler.default);\n\nvar _default = RotationGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/John Ray/Desktop/3jlc-test-project/app/node_modules/react-native-gesture-handler/dist/src/web/RotationGestureHandler.js"],"names":["RotationGestureHandler","Hammer","Rotate","rotation","velocity","center","initialRotation","DEG_RAD","anchorX","x","anchorY","y","IndiscreteGestureHandler"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;IACMA,sB;;;;;;;;;;;;SACF,eAAW;AACP,aAAO,QAAP;AACH;;;SACD,eAAyB;AACrB,aAAOC,kBAAOC,MAAd;AACH;;;WACD,oCAAqD;AAAA;;AAAA,UAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,UAApBC,QAAoB,QAApBA,QAAoB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACjD,aAAO;AACHF,QAAAA,QAAQ,EAAE,CAACA,QAAQ,6BAAI,KAAKG,eAAT,oCAA4B,CAA5B,CAAT,IAA2CC,kBADlD;AAEHC,QAAAA,OAAO,EAAEH,MAAM,CAACI,CAFb;AAGHC,QAAAA,OAAO,EAAEL,MAAM,CAACM,CAHb;AAIHP,QAAAA,QAAQ,EAARA;AAJG,OAAP;AAMH;;;EAdgCQ,iC;;eAgBtBZ,sB","sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { DEG_RAD } from './constants';\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\nclass RotationGestureHandler extends IndiscreteGestureHandler {\n    get name() {\n        return 'rotate';\n    }\n    get NativeGestureClass() {\n        return Hammer.Rotate;\n    }\n    transformNativeEvent({ rotation, velocity, center }) {\n        return {\n            rotation: (rotation - (this.initialRotation ?? 0)) * DEG_RAD,\n            anchorX: center.x,\n            anchorY: center.y,\n            velocity,\n        };\n    }\n}\nexport default RotationGestureHandler;\n"]},"metadata":{},"sourceType":"script"}