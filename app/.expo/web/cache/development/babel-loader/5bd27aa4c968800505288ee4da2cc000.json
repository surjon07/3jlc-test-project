{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHandler = getHandler;\nexports.createGestureHandler = createGestureHandler;\nexports.dropGestureHandler = dropGestureHandler;\nexports.getNodes = getNodes;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar gestures = {};\n\nfunction getHandler(tag) {\n  if (tag in gestures) return gestures[tag];\n  throw new Error(\"No handler for tag \" + tag);\n}\n\nfunction createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error(\"Handler with tag \" + handlerTag + \" already exists\");\n  }\n\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nfunction dropGestureHandler(handlerTag) {\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\n\nfunction getNodes() {\n  return _objectSpread({}, gestures);\n}","map":{"version":3,"sources":["C:/Users/John Ray/Desktop/3jlc-test-project/app/node_modules/react-native-gesture-handler/dist/src/web/NodeManager.js"],"names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAG,EAAjB;;AACO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAC5B,MAAIA,GAAG,IAAIF,QAAX,EACI,OAAOA,QAAQ,CAACE,GAAD,CAAf;AACJ,QAAM,IAAIC,KAAJ,yBAAgCD,GAAhC,CAAN;AACH;;AACM,SAASE,oBAAT,CAA8BC,UAA9B,EAA0CC,OAA1C,EAAmD;AACtD,MAAID,UAAU,IAAIL,QAAlB,EAA4B;AACxB,UAAM,IAAIG,KAAJ,uBAA8BE,UAA9B,qBAAN;AACH;;AACDL,EAAAA,QAAQ,CAACK,UAAD,CAAR,GAAuBC,OAAvB;AAEAN,EAAAA,QAAQ,CAACK,UAAD,CAAR,CAAqBA,UAArB,GAAkCA,UAAlC;AACH;;AACM,SAASE,kBAAT,CAA4BF,UAA5B,EAAwC;AAC3CJ,EAAAA,UAAU,CAACI,UAAD,CAAV,CAAuBG,OAAvB;AAEA,SAAOR,QAAQ,CAACK,UAAD,CAAf;AACH;;AACM,SAASI,QAAT,GAAoB;AACvB,2BAAYT,QAAZ;AACH","sourcesContent":["const gestures = {};\nexport function getHandler(tag) {\n    if (tag in gestures)\n        return gestures[tag];\n    throw new Error(`No handler for tag ${tag}`);\n}\nexport function createGestureHandler(handlerTag, handler) {\n    if (handlerTag in gestures) {\n        throw new Error(`Handler with tag ${handlerTag} already exists`);\n    }\n    gestures[handlerTag] = handler;\n    // @ts-ignore no types for web handlers yet\n    gestures[handlerTag].handlerTag = handlerTag;\n}\nexport function dropGestureHandler(handlerTag) {\n    getHandler(handlerTag).destroy();\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete gestures[handlerTag];\n}\nexport function getNodes() {\n    return { ...gestures };\n}\n"]},"metadata":{},"sourceType":"script"}