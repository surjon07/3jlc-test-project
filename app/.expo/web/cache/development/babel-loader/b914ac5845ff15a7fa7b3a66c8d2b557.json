{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _constants = require(\"./constants\");\n\nvar _DraggingGestureHandler = _interopRequireDefault(require(\"./DraggingGestureHandler\"));\n\nvar _utils = require(\"./utils\");\n\nvar _State = require(\"../State\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PanGestureHandler = function (_DraggingGestureHandl) {\n  (0, _inherits2.default)(PanGestureHandler, _DraggingGestureHandl);\n\n  var _super = _createSuper(PanGestureHandler);\n\n  function PanGestureHandler() {\n    (0, _classCallCheck2.default)(this, PanGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(PanGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pan';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Pan;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, (0, _get2.default)((0, _getPrototypeOf2.default)(PanGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        direction: this.getDirection()\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var nextState = (0, _get2.default)((0, _getPrototypeOf2.default)(PanGestureHandler.prototype), \"getState\", this).call(this, type);\n\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n\n      return nextState;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var config = this.getConfig();\n      var activeOffsetXStart = config.activeOffsetXStart,\n          activeOffsetXEnd = config.activeOffsetXEnd,\n          activeOffsetYStart = config.activeOffsetYStart,\n          activeOffsetYEnd = config.activeOffsetYEnd,\n          minDist = config.minDist;\n      var directions = [];\n      var horizontalDirections = [];\n\n      if (!(0, _utils.isnan)(minDist)) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      if (!(0, _utils.isnan)(activeOffsetXStart)) horizontalDirections.push(_hammerjs.default.DIRECTION_LEFT);\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) horizontalDirections.push(_hammerjs.default.DIRECTION_RIGHT);\n      if (horizontalDirections.length === 2) horizontalDirections = [_hammerjs.default.DIRECTION_HORIZONTAL];\n      directions = directions.concat(horizontalDirections);\n      var verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) verticalDirections.push(_hammerjs.default.DIRECTION_UP);\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) verticalDirections.push(_hammerjs.default.DIRECTION_DOWN);\n      if (verticalDirections.length === 2) verticalDirections = [_hammerjs.default.DIRECTION_VERTICAL];\n      directions = directions.concat(verticalDirections);\n\n      if (!directions.length) {\n        return _hammerjs.default.DIRECTION_NONE;\n      }\n\n      if (directions[0] === _hammerjs.default.DIRECTION_HORIZONTAL && directions[1] === _hammerjs.default.DIRECTION_VERTICAL) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      if (horizontalDirections.length && verticalDirections.length) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      return directions[0];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          minDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, criteria) {\n      var deltaX = _ref.deltaX,\n          deltaY = _ref.deltaY;\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n  }, {\n    key: \"shouldActivateUnderCustomCriteria\",\n    value: function shouldActivateUnderCustomCriteria(_ref2, criteria) {\n      var deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY,\n          velocity = _ref2.velocity;\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n  }, {\n    key: \"shouldMultiFingerPanFail\",\n    value: function shouldMultiFingerPanFail(_ref3) {\n      var pointerLength = _ref3.pointerLength,\n          scale = _ref3.scale,\n          deltaRotation = _ref3.deltaRotation;\n\n      if (pointerLength <= 1) {\n        return false;\n      }\n\n      var deltaScale = Math.abs(scale - 1);\n      var absDeltaRotation = Math.abs(deltaRotation);\n\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        return true;\n      }\n\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n\n      var velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity: velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n\n        return {\n          success: true\n        };\n      }\n\n      return {\n        success: false\n      };\n    }\n  }]);\n  return PanGestureHandler;\n}(_DraggingGestureHandler.default);\n\nvar _default = PanGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/John Ray/Desktop/3jlc-test-project/app/node_modules/react-native-gesture-handler/dist/src/web/PanGestureHandler.js"],"names":["PanGestureHandler","Hammer","Pan","direction","getDirection","type","nextState","previousState","State","UNDETERMINED","ACTIVE","BEGAN","config","getConfig","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","minDist","directions","horizontalDirections","DIRECTION_ALL","push","DIRECTION_LEFT","DIRECTION_RIGHT","length","DIRECTION_HORIZONTAL","concat","verticalDirections","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_NONE","hasCustomActivationCriteria","minDistSq","criteria","deltaX","deltaY","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","velocity","x","y","minVelocityX","minVelocityY","minVelocitySq","pointerLength","scale","deltaRotation","deltaScale","Math","abs","absDeltaRotation","MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD","MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD","props","_recognizer","inputData","shouldFailUnderCustomCriteria","failed","velocityX","velocityY","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","maxPointers","success","DraggingGestureHandler"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD, MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD, } from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport { State } from '../State';\nclass PanGestureHandler extends DraggingGestureHandler {\n    get name() {\n        return 'pan';\n    }\n    get NativeGestureClass() {\n        return Hammer.Pan;\n    }\n    getHammerConfig() {\n        return {\n            ...super.getHammerConfig(),\n            direction: this.getDirection(),\n        };\n    }\n    getState(type) {\n        const nextState = super.getState(type);\n        // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n        if (this.previousState === State.UNDETERMINED &&\n            nextState === State.ACTIVE) {\n            return State.BEGAN;\n        }\n        return nextState;\n    }\n    getDirection() {\n        const config = this.getConfig();\n        const { activeOffsetXStart, activeOffsetXEnd, activeOffsetYStart, activeOffsetYEnd, minDist, } = config;\n        let directions = [];\n        let horizontalDirections = [];\n        if (!isnan(minDist)) {\n            return Hammer.DIRECTION_ALL;\n        }\n        if (!isnan(activeOffsetXStart))\n            horizontalDirections.push(Hammer.DIRECTION_LEFT);\n        if (!isnan(activeOffsetXEnd))\n            horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n        if (horizontalDirections.length === 2)\n            horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n        directions = directions.concat(horizontalDirections);\n        let verticalDirections = [];\n        if (!isnan(activeOffsetYStart))\n            verticalDirections.push(Hammer.DIRECTION_UP);\n        if (!isnan(activeOffsetYEnd))\n            verticalDirections.push(Hammer.DIRECTION_DOWN);\n        if (verticalDirections.length === 2)\n            verticalDirections = [Hammer.DIRECTION_VERTICAL];\n        directions = directions.concat(verticalDirections);\n        if (!directions.length) {\n            return Hammer.DIRECTION_NONE;\n        }\n        if (directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n            directions[1] === Hammer.DIRECTION_VERTICAL) {\n            return Hammer.DIRECTION_ALL;\n        }\n        if (horizontalDirections.length && verticalDirections.length) {\n            return Hammer.DIRECTION_ALL;\n        }\n        return directions[0];\n    }\n    getConfig() {\n        if (!this.hasCustomActivationCriteria) {\n            // Default config\n            // If no params have been defined then this config should emulate the native gesture as closely as possible.\n            return {\n                minDistSq: 10,\n            };\n        }\n        return this.config;\n    }\n    shouldFailUnderCustomCriteria({ deltaX, deltaY }, criteria) {\n        return ((!isnan(criteria.failOffsetXStart) &&\n            deltaX < criteria.failOffsetXStart) ||\n            (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n            (!isnan(criteria.failOffsetYStart) &&\n                deltaY < criteria.failOffsetYStart) ||\n            (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd));\n    }\n    shouldActivateUnderCustomCriteria({ deltaX, deltaY, velocity }, criteria) {\n        return ((!isnan(criteria.activeOffsetXStart) &&\n            deltaX < criteria.activeOffsetXStart) ||\n            (!isnan(criteria.activeOffsetXEnd) &&\n                deltaX > criteria.activeOffsetXEnd) ||\n            (!isnan(criteria.activeOffsetYStart) &&\n                deltaY < criteria.activeOffsetYStart) ||\n            (!isnan(criteria.activeOffsetYEnd) &&\n                deltaY > criteria.activeOffsetYEnd) ||\n            TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: deltaX, y: deltaY }), criteria.minDistSq) ||\n            TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n            TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n            TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq));\n    }\n    shouldMultiFingerPanFail({ pointerLength, scale, deltaRotation, }) {\n        if (pointerLength <= 1) {\n            return false;\n        }\n        // Test if the pan had too much pinching or rotating.\n        const deltaScale = Math.abs(scale - 1);\n        const absDeltaRotation = Math.abs(deltaRotation);\n        if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n            // > If the threshold doesn't seem right.\n            // You can log the value which it failed at here:\n            return true;\n        }\n        if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n            // > If the threshold doesn't seem right.\n            // You can log the value which it failed at here:\n            return true;\n        }\n        return false;\n    }\n    updateHasCustomActivationCriteria(criteria) {\n        return (isValidNumber(criteria.minDistSq) ||\n            isValidNumber(criteria.minVelocityX) ||\n            isValidNumber(criteria.minVelocityY) ||\n            isValidNumber(criteria.minVelocitySq) ||\n            isValidNumber(criteria.activeOffsetXStart) ||\n            isValidNumber(criteria.activeOffsetXEnd) ||\n            isValidNumber(criteria.activeOffsetYStart) ||\n            isValidNumber(criteria.activeOffsetYEnd));\n    }\n    isGestureEnabledForEvent(props, _recognizer, inputData) {\n        if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n            return { failed: true };\n        }\n        const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n        if (this.hasCustomActivationCriteria &&\n            this.shouldActivateUnderCustomCriteria({ deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity }, props)) {\n            if (this.shouldMultiFingerPanFail({\n                pointerLength: inputData.maxPointers,\n                scale: inputData.scale,\n                deltaRotation: inputData.deltaRotation,\n            })) {\n                return {\n                    failed: true,\n                };\n            }\n            return { success: true };\n        }\n        return { success: false };\n    }\n}\nexport default PanGestureHandler;\n"]},"metadata":{},"sourceType":"script"}