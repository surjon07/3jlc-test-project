{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _GenericTouchable = _interopRequireWildcard(require(\"./GenericTouchable\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\John Ray\\\\Desktop\\\\3jlc-test-project\\\\app\\\\node_modules\\\\react-native-gesture-handler\\\\dist\\\\src\\\\components\\\\touchables\\\\TouchableHighlight.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar TouchableHighlight = function (_Component) {\n  (0, _inherits2.default)(TouchableHighlight, _Component);\n\n  var _super = _createSuper(TouchableHighlight);\n\n  function TouchableHighlight(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TouchableHighlight);\n    _this = _super.call(this, props);\n\n    _this.showUnderlay = function () {\n      if (!_this.hasPressHandler()) {\n        return;\n      }\n\n      _this.setState({\n        extraChildStyle: {\n          opacity: _this.props.activeOpacity\n        },\n        extraUnderlayStyle: {\n          backgroundColor: _this.props.underlayColor\n        }\n      });\n\n      _this.props.onShowUnderlay == null ? void 0 : _this.props.onShowUnderlay();\n    };\n\n    _this.hasPressHandler = function () {\n      return _this.props.onPress || _this.props.onPressIn || _this.props.onPressOut || _this.props.onLongPress;\n    };\n\n    _this.hideUnderlay = function () {\n      _this.setState({\n        extraChildStyle: null,\n        extraUnderlayStyle: null\n      });\n\n      _this.props.onHideUnderlay == null ? void 0 : _this.props.onHideUnderlay();\n    };\n\n    _this.onStateChange = function (_from, to) {\n      if (to === _GenericTouchable.TOUCHABLE_STATE.BEGAN) {\n        _this.showUnderlay();\n      } else if (to === _GenericTouchable.TOUCHABLE_STATE.UNDETERMINED || to === _GenericTouchable.TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        _this.hideUnderlay();\n      }\n    };\n\n    _this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(TouchableHighlight, [{\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      if (!this.props.children) {\n        return React.createElement(_reactNative.View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 20\n          }\n        });\n      }\n\n      var child = React.Children.only(this.props.children);\n      return React.cloneElement(child, {\n        style: _reactNative.StyleSheet.compose(child.props.style, this.state.extraChildStyle)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$style = _this$props.style,\n          style = _this$props$style === void 0 ? {} : _this$props$style,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"style\"]);\n      var extraUnderlayStyle = this.state.extraUnderlayStyle;\n      return React.createElement(_GenericTouchable.default, (0, _extends2.default)({}, rest, {\n        style: [style, extraUnderlayStyle],\n        onStateChange: this.onStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }), this.renderChildren());\n    }\n  }]);\n  return TouchableHighlight;\n}(React.Component);\n\nexports.default = TouchableHighlight;\nTouchableHighlight.defaultProps = _objectSpread(_objectSpread({}, _GenericTouchable.default.defaultProps), {}, {\n  activeOpacity: 0.85,\n  delayPressOut: 100,\n  underlayColor: 'black'\n});","map":{"version":3,"sources":["C:/Users/John Ray/Desktop/3jlc-test-project/app/node_modules/react-native-gesture-handler/dist/src/components/touchables/TouchableHighlight.js"],"names":["TouchableHighlight","props","showUnderlay","hasPressHandler","setState","extraChildStyle","opacity","activeOpacity","extraUnderlayStyle","backgroundColor","underlayColor","onShowUnderlay","onPress","onPressIn","onPressOut","onLongPress","hideUnderlay","onHideUnderlay","onStateChange","_from","to","TOUCHABLE_STATE","BEGAN","UNDETERMINED","MOVED_OUTSIDE","state","children","child","React","Children","only","cloneElement","style","StyleSheet","compose","rest","renderChildren","Component","defaultProps","GenericTouchable","delayPressOut"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;IAIqBA,kB;;;;;AACjB,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACf,8BAAMA,KAAN;;AAEA,UAAKC,YAAL,GAAoB,YAAM;AACtB,UAAI,CAAC,MAAKC,eAAL,EAAL,EAA6B;AACzB;AACH;;AACD,YAAKC,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAE;AACbC,UAAAA,OAAO,EAAE,MAAKL,KAAL,CAAWM;AADP,SADP;AAIVC,QAAAA,kBAAkB,EAAE;AAChBC,UAAAA,eAAe,EAAE,MAAKR,KAAL,CAAWS;AADZ;AAJV,OAAd;;AAQA,YAAKT,KAAL,CAAWU,cAAX,0BAAKV,KAAL,CAAWU,cAAX;AACH,KAbD;;AAcA,UAAKR,eAAL,GAAuB;AAAA,aAAM,MAAKF,KAAL,CAAWW,OAAX,IACzB,MAAKX,KAAL,CAAWY,SADc,IAEzB,MAAKZ,KAAL,CAAWa,UAFc,IAGzB,MAAKb,KAAL,CAAWc,WAHQ;AAAA,KAAvB;;AAIA,UAAKC,YAAL,GAAoB,YAAM;AACtB,YAAKZ,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAE,IADP;AAEVG,QAAAA,kBAAkB,EAAE;AAFV,OAAd;;AAIA,YAAKP,KAAL,CAAWgB,cAAX,0BAAKhB,KAAL,CAAWgB,cAAX;AACH,KAND;;AAOA,UAAKC,aAAL,GAAqB,UAACC,KAAD,EAAQC,EAAR,EAAe;AAChC,UAAIA,EAAE,KAAKC,kCAAgBC,KAA3B,EAAkC;AAC9B,cAAKpB,YAAL;AACH,OAFD,MAGK,IAAIkB,EAAE,KAAKC,kCAAgBE,YAAvB,IACLH,EAAE,KAAKC,kCAAgBG,aADtB,EACqC;AACtC,cAAKR,YAAL;AACH;AACJ,KARD;;AASA,UAAKS,KAAL,GAAa;AACTpB,MAAAA,eAAe,EAAE,IADR;AAETG,MAAAA,kBAAkB,EAAE;AAFX,KAAb;AArCe;AAyClB;;;;WACD,0BAAiB;AACb,UAAI,CAAC,KAAKP,KAAL,CAAWyB,QAAhB,EAA0B;AACtB,eAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,UAAMC,KAAK,GAAGC,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoB,KAAK7B,KAAL,CAAWyB,QAA/B,CAAd;AACA,aAAOE,KAAK,CAACG,YAAN,CAAmBJ,KAAnB,EAA0B;AAC7BK,QAAAA,KAAK,EAAEC,wBAAWC,OAAX,CAAmBP,KAAK,CAAC1B,KAAN,CAAY+B,KAA/B,EAAsC,KAAKP,KAAL,CAAWpB,eAAjD;AADsB,OAA1B,CAAP;AAGH;;;WACD,kBAAS;AAAA,wBAC2B,KAAKJ,KADhC;AAAA,0CACG+B,KADH;AAAA,UACGA,KADH,kCACW,EADX;AAAA,UACkBG,IADlB;AAAA,UAEG3B,kBAFH,GAE0B,KAAKiB,KAF/B,CAEGjB,kBAFH;AAGL,aAAQ,oBAAC,yBAAD,6BAAsB2B,IAAtB;AAA4B,QAAA,KAAK,EAAE,CAACH,KAAD,EAAQxB,kBAAR,CAAnC;AAAgE,QAAA,aAAa,EAAE,KAAKU,aAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACP,KAAKkB,cAAL,EADO,CAAR;AAGH;;;EA1D2CC,e;;;AA4DhDrC,kBAAkB,CAACsC,YAAnB,mCACOC,0BAAiBD,YADxB;AAEI/B,EAAAA,aAAa,EAAE,IAFnB;AAGIiC,EAAAA,aAAa,EAAE,GAHnB;AAII9B,EAAAA,aAAa,EAAE;AAJnB","sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE, } from './GenericTouchable';\nimport { StyleSheet, View, } from 'react-native';\n/**\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component {\n    constructor(props) {\n        super(props);\n        // Copied from RN\n        this.showUnderlay = () => {\n            if (!this.hasPressHandler()) {\n                return;\n            }\n            this.setState({\n                extraChildStyle: {\n                    opacity: this.props.activeOpacity,\n                },\n                extraUnderlayStyle: {\n                    backgroundColor: this.props.underlayColor,\n                },\n            });\n            this.props.onShowUnderlay?.();\n        };\n        this.hasPressHandler = () => this.props.onPress ||\n            this.props.onPressIn ||\n            this.props.onPressOut ||\n            this.props.onLongPress;\n        this.hideUnderlay = () => {\n            this.setState({\n                extraChildStyle: null,\n                extraUnderlayStyle: null,\n            });\n            this.props.onHideUnderlay?.();\n        };\n        this.onStateChange = (_from, to) => {\n            if (to === TOUCHABLE_STATE.BEGAN) {\n                this.showUnderlay();\n            }\n            else if (to === TOUCHABLE_STATE.UNDETERMINED ||\n                to === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n                this.hideUnderlay();\n            }\n        };\n        this.state = {\n            extraChildStyle: null,\n            extraUnderlayStyle: null,\n        };\n    }\n    renderChildren() {\n        if (!this.props.children) {\n            return <View />;\n        }\n        const child = React.Children.only(this.props.children); // TODO: not sure if OK but fixes error\n        return React.cloneElement(child, {\n            style: StyleSheet.compose(child.props.style, this.state.extraChildStyle),\n        });\n    }\n    render() {\n        const { style = {}, ...rest } = this.props;\n        const { extraUnderlayStyle } = this.state;\n        return (<GenericTouchable {...rest} style={[style, extraUnderlayStyle]} onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>);\n    }\n}\nTouchableHighlight.defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n};\n"]},"metadata":{},"sourceType":"script"}