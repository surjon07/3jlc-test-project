{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"PureNativeButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureHandlerButton.default;\n  }\n});\nexports.BorderlessButton = exports.RectButton = exports.BaseButton = exports.RawButton = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _createNativeWrapper = _interopRequireDefault(require(\"../handlers/createNativeWrapper\"));\n\nvar _GestureHandlerButton = _interopRequireDefault(require(\"./GestureHandlerButton\"));\n\nvar _State = require(\"../State\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\John Ray\\\\Desktop\\\\3jlc-test-project\\\\app\\\\node_modules\\\\react-native-gesture-handler\\\\dist\\\\src\\\\components\\\\GestureButtons.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RawButton = (0, _createNativeWrapper.default)(_GestureHandlerButton.default, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\nexports.RawButton = RawButton;\n\nvar BaseButton = function (_React$Component) {\n  (0, _inherits2.default)(BaseButton, _React$Component);\n\n  var _super = _createSuper(BaseButton);\n\n  function BaseButton(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BaseButton);\n    _this = _super.call(this, props);\n\n    _this.handleEvent = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var state = nativeEvent.state,\n          oldState = nativeEvent.oldState,\n          pointerInside = nativeEvent.pointerInside;\n      var active = pointerInside && state === _State.State.ACTIVE;\n\n      if (active !== _this.lastActive && _this.props.onActiveStateChange) {\n        _this.props.onActiveStateChange(active);\n      }\n\n      if (oldState === _State.State.ACTIVE && state !== _State.State.CANCELLED && _this.lastActive && _this.props.onPress) {\n        _this.props.onPress(active);\n      }\n\n      _this.lastActive = active;\n    };\n\n    _this.onHandlerStateChange = function (e) {\n      _this.props.onHandlerStateChange == null ? void 0 : _this.props.onHandlerStateChange(e);\n\n      _this.handleEvent(e);\n    };\n\n    _this.onGestureEvent = function (e) {\n      _this.props.onGestureEvent == null ? void 0 : _this.props.onGestureEvent(e);\n\n      _this.handleEvent(e);\n    };\n\n    _this.lastActive = false;\n    return _this;\n  }\n\n  (0, _createClass2.default)(BaseButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          rippleColor = _this$props.rippleColor,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, [\"rippleColor\"]);\n      return React.createElement(RawButton, (0, _extends2.default)({\n        rippleColor: (0, _reactNative.processColor)(rippleColor)\n      }, rest, {\n        onGestureEvent: this.onGestureEvent,\n        onHandlerStateChange: this.onHandlerStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n  return BaseButton;\n}(React.Component);\n\nexports.BaseButton = BaseButton;\n\nvar AnimatedBaseButton = _reactNative.Animated.createAnimatedComponent(BaseButton);\n\nvar btnStyles = _reactNative.StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\n\nvar RectButton = function (_React$Component2) {\n  (0, _inherits2.default)(RectButton, _React$Component2);\n\n  var _super2 = _createSuper(RectButton);\n\n  function RectButton(props) {\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, RectButton);\n    _this2 = _super2.call(this, props);\n\n    _this2.onActiveStateChange = function (active) {\n      if (_reactNative.Platform.OS !== 'android') {\n        _this2.opacity.setValue(active ? _this2.props.activeOpacity : 0);\n      }\n\n      _this2.props.onActiveStateChange == null ? void 0 : _this2.props.onActiveStateChange(active);\n    };\n\n    _this2.opacity = new _reactNative.Animated.Value(0);\n    return _this2;\n  }\n\n  (0, _createClass2.default)(RectButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          style = _this$props2.style,\n          rest = (0, _objectWithoutProperties2.default)(_this$props2, [\"children\", \"style\"]);\n\n      var resolvedStyle = _reactNative.StyleSheet.flatten(style != null ? style : {});\n\n      return React.createElement(BaseButton, (0, _extends2.default)({}, rest, {\n        style: resolvedStyle,\n        onActiveStateChange: this.onActiveStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), React.createElement(_reactNative.Animated.View, {\n        style: [btnStyles.underlay, {\n          opacity: this.opacity,\n          backgroundColor: this.props.underlayColor,\n          borderRadius: resolvedStyle.borderRadius,\n          borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n          borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n          borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n          borderBottomRightRadius: resolvedStyle.borderBottomRightRadius\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }), children);\n    }\n  }]);\n  return RectButton;\n}(React.Component);\n\nexports.RectButton = RectButton;\nRectButton.defaultProps = {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n};\n\nvar BorderlessButton = function (_React$Component3) {\n  (0, _inherits2.default)(BorderlessButton, _React$Component3);\n\n  var _super3 = _createSuper(BorderlessButton);\n\n  function BorderlessButton(props) {\n    var _this3;\n\n    (0, _classCallCheck2.default)(this, BorderlessButton);\n    _this3 = _super3.call(this, props);\n\n    _this3.onActiveStateChange = function (active) {\n      if (_reactNative.Platform.OS !== 'android') {\n        _this3.opacity.setValue(active ? _this3.props.activeOpacity : 1);\n      }\n\n      _this3.props.onActiveStateChange == null ? void 0 : _this3.props.onActiveStateChange(active);\n    };\n\n    _this3.opacity = new _reactNative.Animated.Value(1);\n    return _this3;\n  }\n\n  (0, _createClass2.default)(BorderlessButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          style = _this$props3.style,\n          rest = (0, _objectWithoutProperties2.default)(_this$props3, [\"children\", \"style\"]);\n      return React.createElement(AnimatedBaseButton, (0, _extends2.default)({}, rest, {\n        onActiveStateChange: this.onActiveStateChange,\n        style: [style, _reactNative.Platform.OS === 'ios' && {\n          opacity: this.opacity\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }), children);\n    }\n  }]);\n  return BorderlessButton;\n}(React.Component);\n\nexports.BorderlessButton = BorderlessButton;\nBorderlessButton.defaultProps = {\n  activeOpacity: 0.3,\n  borderless: true\n};","map":{"version":3,"sources":["C:/Users/John Ray/Desktop/3jlc-test-project/app/node_modules/react-native-gesture-handler/dist/src/components/GestureButtons.js"],"names":["RawButton","GestureHandlerButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","props","handleEvent","nativeEvent","state","oldState","pointerInside","active","State","ACTIVE","lastActive","onActiveStateChange","CANCELLED","onPress","onHandlerStateChange","e","onGestureEvent","rippleColor","rest","React","Component","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","RectButton","Platform","OS","opacity","setValue","activeOpacity","Value","children","style","resolvedStyle","flatten","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","defaultProps","BorderlessButton","borderless"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, Platform, processColor, StyleSheet, } from 'react-native';\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport { State } from '../State';\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n    shouldCancelWhenOutside: false,\n    shouldActivateOnStart: false,\n});\nexport class BaseButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleEvent = ({ nativeEvent, }) => {\n            const { state, oldState, pointerInside } = nativeEvent;\n            const active = pointerInside && state === State.ACTIVE;\n            if (active !== this.lastActive && this.props.onActiveStateChange) {\n                this.props.onActiveStateChange(active);\n            }\n            if (oldState === State.ACTIVE &&\n                state !== State.CANCELLED &&\n                this.lastActive &&\n                this.props.onPress) {\n                this.props.onPress(active);\n            }\n            this.lastActive = active;\n        };\n        // Normally, the parent would execute it's handler first,\n        // then forward the event to listeners. However, here our handler\n        // is virtually only forwarding events to listeners, so we reverse the order\n        // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n        this.onHandlerStateChange = (e) => {\n            this.props.onHandlerStateChange?.(e);\n            this.handleEvent(e);\n        };\n        this.onGestureEvent = (e) => {\n            this.props.onGestureEvent?.(e);\n            this.handleEvent(e); // TODO: maybe it is not correct\n        };\n        this.lastActive = false;\n    }\n    render() {\n        const { rippleColor, ...rest } = this.props;\n        return (<RawButton rippleColor={processColor(rippleColor)} {...rest} onGestureEvent={this.onGestureEvent} onHandlerStateChange={this.onHandlerStateChange}/>);\n    }\n}\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\nconst btnStyles = StyleSheet.create({\n    underlay: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n    },\n});\nexport class RectButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onActiveStateChange = (active) => {\n            if (Platform.OS !== 'android') {\n                this.opacity.setValue(active ? this.props.activeOpacity : 0);\n            }\n            this.props.onActiveStateChange?.(active);\n        };\n        this.opacity = new Animated.Value(0);\n    }\n    render() {\n        const { children, style, ...rest } = this.props;\n        const resolvedStyle = StyleSheet.flatten(style ?? {});\n        return (<BaseButton {...rest} style={resolvedStyle} onActiveStateChange={this.onActiveStateChange}>\n        <Animated.View style={[\n            btnStyles.underlay,\n            {\n                opacity: this.opacity,\n                backgroundColor: this.props.underlayColor,\n                borderRadius: resolvedStyle.borderRadius,\n                borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n                borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n                borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n                borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n        ]}/>\n        {children}\n      </BaseButton>);\n    }\n}\nRectButton.defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n};\nexport class BorderlessButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onActiveStateChange = (active) => {\n            if (Platform.OS !== 'android') {\n                this.opacity.setValue(active ? this.props.activeOpacity : 1);\n            }\n            this.props.onActiveStateChange?.(active);\n        };\n        this.opacity = new Animated.Value(1);\n    }\n    render() {\n        const { children, style, ...rest } = this.props;\n        return (<AnimatedBaseButton {...rest} onActiveStateChange={this.onActiveStateChange} style={[style, Platform.OS === 'ios' && { opacity: this.opacity }]}>\n        {children}\n      </AnimatedBaseButton>);\n    }\n}\nBorderlessButton.defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n};\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"]},"metadata":{},"sourceType":"script"}